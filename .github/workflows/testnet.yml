name: Testnet CI/CD
on:
  push:
    branches:
    # Executes on any non master commit, but release and deploy steps only run on development
    # This is useful to see if tests are passing during PR review
    - '**'
    - '!master'
    paths-ignore:
    - 'monitoring/**'
    - 'emails/**'
env:
  GKE_ZONE: europe-west6-a
  # This is a base repository and we use ${GITHUB_SHA} to set the version of the container
  REPO: aragon/protocol-backend

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: docker login -u ${{secrets.DOCKERHUB_USER}} -p ${{secrets.DOCKERHUB_TOKEN}}
    - run: .github/scripts/docker-build.sh $REPO ${GITHUB_SHA}

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v2
    - run: docker login -u ${{secrets.DOCKERHUB_USER}} -p ${{secrets.DOCKERHUB_TOKEN}}
    - run: .github/scripts/test/run.sh $REPO:${GITHUB_SHA}

  release:
    # if: github.ref == 'refs/heads/development' TODO:GIORGI uncomment
    runs-on: ubuntu-latest
    needs: test
    steps:
    - uses: actions/checkout@v2
    - run: docker login -u ${{secrets.DOCKERHUB_USER}} -p ${{secrets.DOCKERHUB_TOKEN}}
    - run: .github/scripts/docker-release.sh $REPO:${GITHUB_SHA} $REPO:latest

  deploy:
    # if: github.ref == 'refs/heads/development' TODO:GIORGI uncomment
    runs-on: ubuntu-latest
    needs: release
    environment: Staging
    steps:
    - uses: actions/checkout@v2
    # Setup gcloud CLI
    - uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GKE_SA_KEY }}
        project_id: ${{ secrets.GKE_PROJECT }}
    # Get the GKE credentials so we can deploy to the cluster
    - uses: google-github-actions/get-gke-credentials@v0.2.1
      with:
        cluster_name: ${{ secrets.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}
    - name: Deploy
      run: |
        kubectl rollout restart deployment court-backend-{app,server,services} 
        kubectl rollout status deployment court-backend-app
        kubectl rollout status deployment court-backend-server
        kubectl rollout status deployment court-backend-services
